#!/usr/bin/env pwsh
$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent

$exe=""
<<<<<<< Updated upstream
$pathsep=":"
$env_node_path=$env:NODE_PATH
$new_node_path="C:\Projectos\MMA\MMA\MMAdvogados\node_modules\which\bin\node_modules;C:\Projectos\MMA\MMA\MMAdvogados\node_modules\which\node_modules;C:\Projectos\MMA\MMA\MMAdvogados\node_modules;C:\Projectos\MMA\MMA\node_modules;C:\Projectos\MMA\node_modules;C:\Projectos\node_modules;C:\node_modules;C:\Projectos\MMA\MMA\MMAdvogados\node_modules\.pnpm\node_modules"
=======
>>>>>>> Stashed changes
if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {
  # Fix case when both the Windows and Linux builds of Node
  # are installed in the same directory
  $exe=".exe"
<<<<<<< Updated upstream
  $pathsep=";"
} else {
  $new_node_path="/mnt/c/Projectos/MMA/MMA/MMAdvogados/node_modules/which/bin/node_modules:/mnt/c/Projectos/MMA/MMA/MMAdvogados/node_modules/which/node_modules:/mnt/c/Projectos/MMA/MMA/MMAdvogados/node_modules:/mnt/c/Projectos/MMA/MMA/node_modules:/mnt/c/Projectos/MMA/node_modules:/mnt/c/Projectos/node_modules:/mnt/c/node_modules:/mnt/c/Projectos/MMA/MMA/MMAdvogados/node_modules/.pnpm/node_modules"
}
if ([string]::IsNullOrEmpty($env_node_path)) {
  $env:NODE_PATH=$new_node_path
} else {
  $env:NODE_PATH="$new_node_path$pathsep$env_node_path"
}

=======
}
>>>>>>> Stashed changes
$ret=0
if (Test-Path "$basedir/node$exe") {
  # Support pipeline input
  if ($MyInvocation.ExpectingInput) {
    $input | & "$basedir/node$exe"  "$basedir/../which/bin/node-which" $args
  } else {
    & "$basedir/node$exe"  "$basedir/../which/bin/node-which" $args
  }
  $ret=$LASTEXITCODE
} else {
  # Support pipeline input
  if ($MyInvocation.ExpectingInput) {
    $input | & "node$exe"  "$basedir/../which/bin/node-which" $args
  } else {
    & "node$exe"  "$basedir/../which/bin/node-which" $args
  }
  $ret=$LASTEXITCODE
}
<<<<<<< Updated upstream
$env:NODE_PATH=$env_node_path
=======
>>>>>>> Stashed changes
exit $ret
